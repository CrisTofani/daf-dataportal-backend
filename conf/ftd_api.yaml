# Questo e' la descrizione delle API che vengono esposte da dati.gov.it.
# Le API sono pubbliche
swagger: '2.0'
info:
  title: dati.gov.it API
  description: Consume dati.gov.it API
  version: "BETA"
  termsOfService: http://termofservice
  contact:
    name: team digitale
    url: https://teamdigitale.governo.it
  license:
    name: Creative Commons 4.0 International
    url: http://creativecommons.org/licenses/by/4.0/
#host : XXX.XXX.XX.XXX:8000
host: datipubblici.default.svc.cluster.local:9000
#host: localhost:9000
# will be prefixed to all paths
basePath: /dati-gov/v1
produces:
  - application/json
consumes:
  - application/json
paths:
  "/monitor/catalogs":
    get:
      summary: Name of all catalogs
      description:
        List of names of all catalogs
      tags:
        - Monitor
      operationId: monitorcatalogs
      parameters:
      - name: apikey
        in: query
        description: Api key
        required: true
        type: string
      responses:
        200:
          description: An array of Catalog
          schema:
            type: array
            items:
              $ref: '#/definitions/Catalog'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  "/monitor/catalogs/{catalogName}/count":
    get:
      tags:
      - Monitor
      summary: Finds number of datasets per catalogue
      description: Finds number of datasets per catalogue
      operationId: catalogDatasetCount
      parameters:
      - name: catalogName
        in: path
        description: Name of catalog
        required: true
        type: string
      - name: apikey
        in: query
        description: Api key
        required: true
        type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              "$ref": "#/definitions/Distribution"
        '400':
          description: Catalog not exists
        '404':
          description: Catalog not exists
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  "/monitor/catalogs/{catalogName}/distribution_formats":
    get:
      tags:
      - Monitor
      summary: Distribution of datasets per catalogue grouped by format
      description: Distribution of datasets per catalogue grouped by format
      operationId: catalogDistrubutionFormat
      parameters:
      - name: catalogName
        in: path
        description: Name of catalog
        required: true
        type: string
      - name: apikey
        in: query
        description: Api key
        required: true
        type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              "$ref": "#/definitions/Distribution"
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  "/monitor/catalogs/{catalogName}/distribution_groups":
    get:
      tags:
      - Monitor
      summary: Distribution of datasets per catalogue grouped by group title
      description: Distribution of datasets per catalogue grouped by group title
      operationId: catalogDistrubutionGroups
      parameters:
      - name: catalogName
        in: path
        description: Name of catalog
        required: true
        type: string
      - name: apikey
        in: query
        description: Api key
        required: true
        type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              "$ref": "#/definitions/Distribution"
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  "/monitor/catalogs/{catalogName}/distribution_licenses":
    get:
      tags:
      - Monitor
      summary: Distribution of datasets per catalogue grouped by license
      description: Distribution of datasets per catalogue grouped by license
      operationId: catalogDistributionLicense
      parameters:
      - name: catalogName
        in: path
        description: Name of catalog
        required: true
        type: string
      - name: apikey
        in: query
        description: Api key
        required: true
        type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              "$ref": "#/definitions/Distribution"
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  "/monitor/catalogs/{catalogName}/broken_links":
    get:
      tags:
      - Monitor
      summary: Broken links per catalogue
      description: Broken links per catalogue
      operationId: catalogBrokenLinks
      parameters:
      - name: catalogName
        in: path
        description: Name of catalog
        required: true
        type: string
      - name: apikey
        in: query
        description: Api key
        required: true
        type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              "$ref": "#/definitions/BrokenLink"
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  "/monitor/dati_gov/broken_links":
    get:
      tags:
      - Monitor
      summary: List of all broken links
      description: List of all broken links
      operationId: allBrokenLinks
      parameters:
        - name: apikey
          in: query
          description: Api key
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              "$ref": "#/definitions/BrokenLink"
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  "/monitor/dati_gov/count":
    get:
      tags:
      - Monitor
      summary: List of catalogs name and number of dataset
      description: List of catalogs name and number of dataset
      operationId: allDatasets
      parameters:
      - name: apikey
        in: query
        description: Api key
        required: true
        type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              "$ref": "#/definitions/Distribution"
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  "/monitor/dati_gov/distribution_formats":
    get:
      tags:
      - Monitor
      summary: All resources grouped by format
      description: All resources grouped by format
      operationId: allDistributionFormats
      parameters:
      - name: apikey
        in: query
        description: Api key
        required: true
        type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              "$ref": "#/definitions/Distribution"
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  "/monitor/dati_gov/distribution_groups":
    get:
      tags:
      - Monitor
      summary: All resources grouped by group title
      description: All resources grouped by group title
      operationId: allDistributionGroups
      parameters:
      - name: apikey
        in: query
        description: Api key
        required: true
        type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              "$ref": "#/definitions/Distribution"
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  "/monitor/dati_gov/distribution_licenses":
    get:
      tags:
      - Monitor
      summary: All resources grouped by license
      description: All resources grouped by license
      operationId: allDistributionLiceses
      parameters:
      - name: apikey
        in: query
        description: Api key
        required: true
        type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              "$ref": "#/definitions/Distribution"
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  "/dashboard/create/{tableName}/{fileType}":
    post:
      tags:
      - Dashboard
      summary: Create a table for metabase visualization
      operationId: createTable
      consumes:
         - multipart/form-data
      parameters:
      - in: formData
        name: upfile
        type: file
        required: true
        description: The file to upload
      - name: tableName
        in: path
        description: Name of table
        required: true
        type: string
      - name: fileType
        in: path
        description: csv o json enum not working
        required: true
        type: string
      - name: apikey
        in: query
        description: Api key
        required: true
        type: string
      responses:
        '200':
          description: successful operation
          schema:
            "$ref": "#/definitions/Success"
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  "/dashboard/update/{tableName}/{fileType}":
    put:
      tags:
      - Dashboard
      summary: Overwrite a table for metabase visualization
      operationId: updateTable
      consumes:
         - multipart/form-data
      parameters:
      - in: formData
        name: upfile
        required : true
        type: file
        description: The file to upload
      - name: tableName
        in: path
        description: Name of table
        required: true
        type: string
      - name: fileType
        in: path
        description: csv o json enum not working
        required: true
        type: string
      - name: apikey
        in: query
        description: Api key
        required: true
        type: string
      responses:
        '200':
          description: successful operation
          schema:
            "$ref": "#/definitions/Success"
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  "/dashboard/tables":
    get:
      tags:
      - Dashboard
      summary: List of tables for dashboard visualization
      operationId: dashboardTables
      produces:
       - application/json
      parameters:
      - name: apikey
        in: query
        description: Api key
        required: true
        type: string
      responses:
        200:
          description: An array of Catalog
          schema:
            type: array
            items:
              $ref: '#/definitions/Catalog'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  "/dashboard/iframes":
      get:
        tags:
        - Dashboard
        summary: List of iframes for dashboard visualization
        operationId: dashboardIframes
        produces:
         - application/json
        responses:
          200:
            description: An array of iFrames
            schema:
              type: array
              items:
                $ref: '#/definitions/DashboardIframes'
          default:
            description: Unexpected error
            schema:
              $ref: '#/definitions/Error'
  "/dashboards":
    get:
      tags:
      - Dashboard
      summary: Get Dashboards
      operationId: dashboards
      produces:
        - application/json
      consumes:
         - application/json
      responses:
        200:
          description: Success Message
          schema:
            type: array
            items:
              $ref: '#/definitions/Dashboard'
        default:
            description: Unexpected error
            schema:
              $ref: '#/definitions/Error'
    post:
      tags:
      - Dashboard
      summary: Save Dashboard
      operationId: savedashboard
      produces:
        - application/json
      consumes:
         - application/json
      parameters:
      - name: dashboard
        in: body
        description: Dashboard to Save
        required: true
        schema:
          $ref: '#/definitions/Dashboard'
      responses:
        '200':
          description: successful operation
          schema:
            "$ref": "#/definitions/Success"
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  "/dashboards/{dashboard_id}":
    get:
      tags:
      - Dashboard
      summary: get dashboard by id
      operationId: dashboardsbyid
      consumes:
         - application/json
      produces:
         - application/json
      parameters:
      - name: dashboard_id
        in: path
        description: id of dashboard
        required: true
        type: string
      responses:
        '200':
          description: successful operation
          schema:
            "$ref": "#/definitions/Dashboard"
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
      - Dashboard
      summary: get dashboard by id
      operationId: deletedashboard
      consumes:
         - application/json
      produces:
         - application/json
      parameters:
      - name: dashboard_id
        in: path
        description: id of dashboard
        required: true
        type: string
      responses:
        '200':
          description: successful operation
          schema:
            "$ref": "#/definitions/Success"
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  "/user-stories":
    get:
      tags:
      - UserStory
      summary: Get UserStories
      operationId: stories
      produces:
        - application/json
      consumes:
         - application/json
      responses:
        200:
          description: Success Message
          schema:
            type: array
            items:
              $ref: '#/definitions/UserStory'
        default:
            description: Unexpected error
            schema:
              $ref: '#/definitions/Error'
    post:
      tags:
      - UserStory
      summary: Save UserStory
      operationId: savestories
      produces:
        - application/json
      consumes:
         - application/json
      parameters:
      - name: story
        in: body
        description: Dashboard to Save
        required: true
        schema:
          $ref: '#/definitions/UserStory'
      responses:
        '200':
          description: successful operation
          schema:
            "$ref": "#/definitions/Success"
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  "/user-stories/{story_id}":
    get:
      tags:
      - UserStory
      summary: get dashboard by id
      operationId: storiesbyid
      consumes:
         - application/json
      produces:
         - application/json
      parameters:
      - name: story_id
        in: path
        description: id of dashboard
        required: true
        type: string
      responses:
        '200':
          description: successful operation
          schema:
            "$ref": "#/definitions/UserStory"
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
      - UserStory
      summary: delete by id
      operationId: deletestory
      consumes:
         - application/json
      produces:
         - application/json
      parameters:
      - name: story_id
        in: path
        description: id of dashboard
        required: true
        type: string
      responses:
        '200':
          description: successful operation
          schema:
            "$ref": "#/definitions/Success"
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

definitions:
  Catalog:
    properties:
       name:
         type: string
         description: Name of catalog
  Distribution:
    type: object
    properties:
      label:
         type: string
         description: Label Name
      count:
         type: number
         format: float
         description: Number of items per label
  BrokenLink:
    type: object
    properties:
      label:
         type: string
         description: Label Name
      url:
         type: string
         description: Original url
      m_status:
         type : string
         description : TODO trasfom in enum ko or ok or ...
      name:
         type : string
         description : file name of resource
      rurl:
         type : string
         description : Url of resource
      dataset_url:
         type : string
         description : Url of dataset in dati.gov.it
      catalog_name:
         type : string
         description : Name of catalog
  Credentials:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
  DashboardIframes:
    type: object
    properties:
      iframe_url:
        type: string
      origin:
        type: string
      title:
        type: string
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
  Success:
    type: object
    properties:
      message:
        type: string
      fields:
        type: string
  Dashboard:
    type: object
    properties:
      user:
        type: string
      layout:
        type: string
      widgets:
        type: string
      title:
        type: string
      status:
        type: integer
        format: int32
      id:
        type: string
       # $ref: '#/definitions/Oid'
  UserStory:
    type: object
    properties:
      id:
        type: string
      user:
        type: string
      title:
        type: string
      published:
        type: boolean
      subtitle:
        type: string
      graph:
        $ref: '#/definitions/Graph'
      text:
        type: string
      image:
        $ref: '#/definitions/Image'
      footer:
        type:
          string
  Oid:
    type: object
    properties:
      $oid:
        type: string
  Image:
    type: object
    properties:
      url:
        type: string
      caption:
        type: string
  Graph:
    type: object
    properties:
      props:
        $ref: '#/definitions/Props'
      title:
        type: string
  Props:
    type: object
    properties:
      url:
        type: string