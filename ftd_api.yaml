# this is an example of the Uber API
# as a demonstration of an API spec in YAML
swagger: '2.0'
info:
  title: dati.gov.it API
  description: dati.gov.it API swagger 2.0 file
  version: "1.0.0"
# the domain of the service
host: localhost:9443
# array of all schemes that your API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /api/v1
tags:
- name: Monitor
paths:
  "/monitor/catalogs":
    get:
      tags:
      - Monitor
      summary: List of original catalogs imported
      description: List of original catalogs imported
      operationId: catalogs
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              "$ref": "#/definitions/ActionAnyContent"
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  "/monitor/catalogs/count/{catalogName}":
    get:
      tags:
      - Monitor
      summary: Finds number of datasets per catalogue
      description: Finds number of datasets per catalogue
      operationId: catalogDatasetCount
      parameters:
      - name: catalogName
        in: path
        description: Name of catalog
        required: true
        type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              "$ref": "#/definitions/ActionAnyContent"
        '400':
          description: Catalog not exists
        '404':
          description: Catalog not exists
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  "/monitor/catalogs/distribution_formats/{catalogName}":
    get:
      tags:
      - Monitor
      summary: Distribution of datasets per catalogue grouped by format
      description: Distribution of datasets per catalogue grouped by format
      operationId: catalogDistrubutionFormat
      parameters:
      - name: catalogName
        in: path
        description: Name of catalog
        required: true
        type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              "$ref": "#/definitions/ActionAnyContent"
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  "/monitor/catalogs/distribution_groups/{catalogName}":
    get:
      tags:
      - Monitor
      summary: Distribution of datasets per catalogue grouped by group title
      description: Distribution of datasets per catalogue grouped by group title
      operationId: catalogDistrubutionGroups
      parameters:
      - name: catalogName
        in: path
        description: Name of catalog
        required: true
        type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              "$ref": "#/definitions/ActionAnyContent"
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  "/monitor/catalogs/distribution_licenses/{catalogName}":
    get:
      tags:
      - Monitor
      summary: Distribution of datasets per catalogue grouped by license
      description: Distribution of datasets per catalogue grouped by license
      operationId: catalogDistributionLicense
      parameters:
      - name: catalogName
        in: path
        description: Name of catalog
        required: true
        type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              "$ref": "#/definitions/ActionAnyContent"
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  "/monitor/dati_gov/broken_links":
    get:
      tags:
      - Monitor
      summary: List of all broken links
      description: List of all broken links
      operationId: allBrokenLinks
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              "$ref": "#/definitions/ActionAnyContent"
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  "/monitor/dati_gov/count":
    get:
      tags:
      - Monitor
      summary: List of catalogs name and number of dataset
      description: List of catalogs name and number of dataset
      operationId: allDatasets
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              "$ref": "#/definitions/Distributions"
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  "/monitor/dati_gov/distribution_formats":
    get:
      tags:
      - Monitor
      summary: All resources grouped by format
      description: All resources grouped by format
      operationId: allDistributionFormats
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              "$ref": "#/definitions/Distributions"
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  "/monitor/dati_gov/distribution_groups":
    get:
      tags:
      - Monitor
      summary: All resources grouped by group title
      description: All resources grouped by group title
      operationId: allDistributionGroups
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              "$ref": "#/definitions/Distributions"
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  "/monitor/dati_gov/distribution_licenses":
    get:
      tags:
      - Monitor
      summary: All resources grouped by license
      description: All resources grouped by license
      operationId: allDistributionLiceses
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              "$ref": "#/definitions/Distributions"
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  ActionAnyContent:
    type: object
  Distribution:
    type: object
    properties:
      label:
         type: string
         description: Label Name
      count:
         type: number
         format: float
         description: Number of items per label
  Distributions:
    type: array
    items:
      $ref: '#/definitions/Distribution'
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
